@page "/apply"
@using AGC_Management.Entities
@attribute [Authorize(Roles = "BotOwner, Administrator, HeadMod, Moderator, Supporter, HeadEventmanager, Team, User")]
<h3>Bewerben</h3>



<div class="glass-container">
<div class="row">
    <div class="col-md-12 mt-3">
        <table class="table">
            <thead>
            <tr>
                <th>Position</th>

                <th>Bewerbbar?</th>
                <th>Bewerben</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var position in positions)
            {
                <tr>
                    <td>@position.PositionName</td>

                    <td>
                        <span class="@GetBoolCSSClass(position.IsApplicable)">@BoolToString(position.IsApplicable)</span>
                    </td>                    
                    <td>
                        <button class="btn btn-primary-glass" onclick="window.location.href='/apply/@position.PositionId'">Bewerben</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="mt-3">Bitte beachte die Bewerbungsanforderungen auf dem Server</div>
</div>
</div>



@code {
    private List<ApplicationPosition> positions = new List<ApplicationPosition>();


    protected override async Task OnInitializedAsync()
    {
        positions = await GetPositions();
    }
    
    
    private string GetBoolCSSClass(bool value)
    {
        return value ? "badge-success-glass" : "badge-danger-glass";
    }
    
    
    private async Task<List<ApplicationPosition>> GetPositions()
    {
        var db = CurrentApplication.ServiceProvider.GetRequiredService<NpgsqlDataSource>();
        await using var command = db.CreateCommand();
        command.CommandText = "SELECT * FROM applicationcategories";
        await using var reader = await command.ExecuteReaderAsync();
        var list = new List<ApplicationPosition>();
        while (await reader.ReadAsync())
        {
            list.Add(new ApplicationPosition
            {
                PositionName = reader.GetString(0),
                PositionId = reader.GetString(1),
                IsApplicable = reader.GetBoolean(2)
            });
        }
        return list;
    }
    
    private string BoolToString(bool value)
    {
        return value ? "Ja" : "Nein";
    }

}